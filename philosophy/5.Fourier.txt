Though Amplitude data is obtained from actual recorded sound but it can be quite misleading. Amplitude data may consist of a number of noise sources whichmay combine to give a cumulative disturbance is the signal. Moreover ampltiude analysis can be quite misleading as any word can be spoken at different intensities and still be identified by the human brain. So we convert the segmented audio data to frequency data.
Frequency data ensures uniqueness of characteristics and offers ease in noise filtration. But I am quite a noob and naive so I didn't go for noise cancellation. 
I did something peculiar yet common. I searched for ways to convert the segmented data to frequency domain and guess what ,it can be done by our old buddy from first year i.e. Fourier transform. So I searched for a decent cpp library for FFT. I ended up using the library libfftw3. The next thing I did was to plot an Intensity vs Frequensy graph.. It seemed to form a bell shaped curve for syllables and remained stagnant(quite distant from zero values) at other frequencies. Then I assumed a threshold value and considered only the signals above the threshold value for analysis.

From the frequency data we obtained the features as mentioned in the bellfft.cpp file.
